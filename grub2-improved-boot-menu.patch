[eshatokhin@: ported the patch to GRUB 2.02]

diff --git a/po/ru.po b/po/ru.po
index 53b4f9c79..1de3db394 100644
--- a/po/ru.po
+++ b/po/ru.po
@@ -6762,12 +6762,12 @@ msgid "Found kernel module directory: %s\\n"
 msgstr "Найден каталог модулей ядра: %s\\n"
 
 #: util/grub.d/10_linux.in:85
-msgid "%s, with Linux %s (recovery mode)"
-msgstr "%s, с Linux %s (режим восстановления)"
+msgid "%s - Linux %s (recovery mode)"
+msgstr "%s - Linux %s (режим восстановления)"
 
 #: util/grub.d/10_linux.in:87
-msgid "%s, with Linux %s"
-msgstr "%s, с Linux %s"
+msgid "%s - Linux %s"
+msgstr "%s - Linux %s"
 
 #: util/grub.d/10_linux.in:131 util/grub.d/20_linux_xen.in:117
 msgid "Loading Linux %s ..."
diff --git a/util/grub.d/10_linux.in b/util/grub.d/10_linux.in
index 5b71bd0db..6bcde54b1 100644
--- a/util/grub.d/10_linux.in
+++ b/util/grub.d/10_linux.in
@@ -82,9 +82,9 @@ linux_entry ()
   if [ x$type != xsimple ] ; then
       case $type in
 	  recovery)
-	      title="$(gettext_printf "%s, with Linux %s (recovery mode)" "${os}" "${version}")" ;;
+	      title="$(gettext_printf "%s - Linux %s (recovery mode)" "${os}" "${version}")" ;;
 	  *)
-	      title="$(gettext_printf "%s, with Linux %s" "${os}" "${version}")" ;;
+	      title="$(gettext_printf "%s - Linux %s" "${os}" "${version}")" ;;
       esac
       if [ x"$title" = x"$GRUB_ACTUAL_DEFAULT" ] || [ x"Previous Linux versions>$title" = x"$GRUB_ACTUAL_DEFAULT" ]; then
 	  replacement_title="$(echo "Advanced options for ${OS}" | sed 's,>,>>,g')>$(echo "$title" | sed 's,>,>>,g')"
diff --git a/util/grub.d/30_os-prober.in b/util/grub.d/30_os-prober.in
index 9b8f5968e..e3faf2c91 100644
--- a/util/grub.d/30_os-prober.in
+++ b/util/grub.d/30_os-prober.in
@@ -146,7 +146,7 @@ for OS in ${OSPROBED} ; do
   case ${BOOT} in
     chain)
 
-	  onstr="$(gettext_printf "(on %s)" "${DEVICE}")"
+	  onstr="$(gettext_printf "(on %s)" "${DEVICE#/dev/}")"
       cat << EOF
 menuentry '$(echo "${LONGNAME} $onstr" | grub_quote)' $CLASS --class os \$menuentry_id_option 'osprober-chain-$(grub_get_device_id "${DEVICE}")' {
 EOF
@@ -200,7 +200,9 @@ EOF
       boot_device_id=
       is_top_level=true
       title_correction_code=
-      OS="${LONGNAME}"
+      onstr="$(gettext_printf "(on %s)" "${DEVICE#/dev/}")"
+      # List of items with menuentry names removed (to keep track of identical items)
+      linux_unique_ids="`echo \" ${LINUXPROBED}\" | sed 's/ \([^:]*:[^:]*:\)[^:]*:/ \1:/g'`"
 
       for LINUX in ${LINUXPROBED} ; do
         LROOT="`echo ${LINUX} | cut -d ':' -f 1`"
@@ -210,16 +212,11 @@ EOF
         LINITRD="`echo ${LINUX} | cut -d ':' -f 5`"
         LPARAMS="`echo ${LINUX} | cut -d ':' -f 6- | tr '^' ' '`"
 
-        if [ -z "${LLABEL}" ] ; then
-          LLABEL="${LONGNAME}"
-        fi
-
 	if [ "${LROOT}" != "${LBOOT}" ]; then
 	  LKERNEL="${LKERNEL#/boot}"
 	  LINITRD="${LINITRD#/boot}"
 	fi
 
-	onstr="$(gettext_printf "(on %s)" "${DEVICE}")"
 	recovery_params="$(echo "${LPARAMS}" | grep single)" || true
 	counter=1
 	while echo "$used_osprober_linux_ids" | grep 'osprober-gnulinux-$LKERNEL-${recovery_params}-$counter-$boot_device_id' > /dev/null; do
@@ -234,9 +231,35 @@ EOF
 	  prepare_boot_cache="$(prepare_grub_to_access_device ${LBOOT} | grub_add_tab)"
 	fi
 
+	case ${LLABEL} in
+		"")
+			# Entry name not found - using OS name from os-prober
+			# Advanced subentries will also be suffixed by kernel version
+			title="${LONGNAME}"
+			title_append_vkernel=true
+			;;
+		linux)
+			# Main Grub-legacy entry named simply "linux" - real name is substituted in runtime
+			# We cannot get it, so using OS name from os-prober instead
+			title="${LONGNAME}"
+			;;
+		linux-nonfb)
+			# Another generic name from Grub-legacy (no frame buffer)
+			title="${LONGNAME} - nonfb"
+			;;
+		failsafe)
+			# And one more (failsafe mode)
+			title="${LONGNAME} - failsafe"
+			;;
+		*)
+			# Using all other names as is
+			title="${LLABEL}"
+			;;
+	esac
+
 	if [ "x$is_top_level" = xtrue ] && [ "x${GRUB_DISABLE_SUBMENU}" != xy ]; then
             cat << EOF
-menuentry '$(echo "$OS $onstr" | grub_quote)' $CLASS --class gnu-linux --class gnu --class os \$menuentry_id_option 'osprober-gnulinux-simple-$boot_device_id' {
+menuentry '$(echo "$title $onstr" | grub_quote)' $CLASS --class gnu-linux --class gnu --class os \$menuentry_id_option 'osprober-gnulinux-simple-$boot_device_id' {
 EOF
 	    save_default_entry | grub_add_tab
 	    printf '%s\n' "${prepare_boot_cache}"
@@ -251,12 +274,25 @@ EOF
         cat << EOF
 }
 EOF
-	    echo "submenu '$(gettext_printf "Advanced options for %s" "${OS} $onstr" | grub_quote)' \$menuentry_id_option 'osprober-gnulinux-advanced-$boot_device_id' {"
+	    echo "submenu '$(gettext_printf "Advanced options for %s" "${title} $onstr" | grub_quote)' \$menuentry_id_option 'osprober-gnulinux-advanced-$boot_device_id' {"
 	    is_top_level=false
+
+	    # If there are other entries in the list with absolutely the same kernel, parameters and initrd
+	    # we don't duplicate this main item in the Advanced submenu: it will appear there anyway only with
+	    # different title, and all chances are, this other title will be better suited (since it most probably
+	    # came from the Advanced submebu of the target system's Grub2 menu).
+	    unique_id="`echo ${LINUX} | sed 's/^\([^:]*:[^:]*:\)[^:]*:/\1:/'`"
+	    if ((`echo "${linux_unique_ids}" | grep -Fo "${unique_id}" | wc -l` > 1)); then
+	      continue
+	    fi
+	fi
+	if [ "x$title_append_vkernel" = xtrue ]; then
+		VKERNEL=`echo $LKERNEL | sed -e 's,^\(/boot\)\?\(/vmlinuz-\|/vmlinux-\|/kernel-\),,'`
+		title="${title} - Linux ${VKERNEL}"
 	fi
-	title="${LLABEL} $onstr"
+
         cat << EOF
-	menuentry '$(echo "$title" | grub_quote)' --class gnu-linux --class gnu --class os \$menuentry_id_option 'osprober-gnulinux-$LKERNEL-${recovery_params}-$boot_device_id' {
+	menuentry '$(echo "$title $onstr" | grub_quote)' --class gnu-linux --class gnu --class os \$menuentry_id_option 'osprober-gnulinux-$LKERNEL-${recovery_params}-$boot_device_id' {
 EOF
 	save_default_entry | sed -e "s/^/$grub_tab$grub_tab/"
 	printf '%s\n' "${prepare_boot_cache}" | grub_add_tab
@@ -272,7 +308,7 @@ EOF
 	}
 EOF
 	if [ x"$title" = x"$GRUB_ACTUAL_DEFAULT" ] || [ x"Previous Linux versions>$title" = x"$GRUB_ACTUAL_DEFAULT" ]; then
-	    replacement_title="$(echo "Advanced options for ${OS} $onstr" | sed 's,>,>>,g')>$(echo "$title" | sed 's,>,>>,g')"
+	    replacement_title="$(echo "Advanced options for ${LONGNAME} $onstr" | sed 's,>,>>,g')>$(echo "$title" | sed 's,>,>>,g')"
 	    quoted="$(echo "$GRUB_ACTUAL_DEFAULT" | grub_quote)"
 	    title_correction_code="${title_correction_code}if [ \"x\$default\" = '$quoted' ]; then default='$(echo "$replacement_title" | grub_quote)'; fi;"
 	    grub_warn "$(gettext_printf "Please don't use old title \`%s' for GRUB_DEFAULT, use \`%s' (for versions before 2.00) or \`%s' (for 2.00 or later)" "$GRUB_ACTUAL_DEFAULT" "$replacement_title" "gnulinux-advanced-$boot_device_id>gnulinux-$version-$type-$boot_device_id")"
@@ -291,7 +327,7 @@ EOF
       fi
     ;;
     hurd)
-      onstr="$(gettext_printf "(on %s)" "${DEVICE}")"
+      onstr="$(gettext_printf "(on %s)" "${DEVICE#/dev/}")"
       cat << EOF
 menuentry '$(echo "${LONGNAME} $onstr" | grub_quote)' --class hurd --class gnu --class os \$menuentry_id_option 'osprober-gnuhurd-/boot/gnumach.gz-false-$(grub_get_device_id "${DEVICE}")' {
 EOF
