#!/bin/sh

#See for EFI present
if [ -d /sys/firmware/efi ]; then

. "/usr/share/grub/grub-mkconfig_lib"

#See for Windows EFI string in EFI BIOS
WINDOWS_EFI=$(/usr/sbin/efibootmgr -v | grep -E -m 1 '(WINDOWS|Windows Boot Manager)' | sed 's/.*\(HD([^()]*)File([^()]*)\).*/\1/i')
if [ -z "$WINDOWS_EFI" ]; then
        exit 0
fi
WIN_EFI_PATH=$(echo $WINDOWS_EFI | sed 's/.*File(\([^()]*\))/\1/i')
WIN_EFI_PATH_LINUX=$(echo $WIN_EFI_PATH | sed 's/\\/\//g')
WIN_EFI_PARTUUID=$(echo $WINDOWS_EFI | sed 's/HD([0-9a-f]\+,[0-9a-f]\+,[0-9a-f]\+,\([0-9a-f\-]\+\)).*/\1/i')

#Determine EFI UUID
WIN_EFI_DRIVE=$(/sbin/blkid -s PARTUUID | grep -i $WIN_EFI_PARTUUID | awk '{print $1}' | sed 's/://')
WIN_EFI_UUID=$(/sbin/blkid -s UUID $WIN_EFI_DRIVE | sed 's/.*="//;s/".*//')

ESP_SEARCH_HINTS=$(grub2-efi-probe --target hints_string /boot/efi)

cat << EOF
menuentry "Microsoft Windows Vista/7/8 UEFI-GPT" {
EOF
save_default_entry | sed -e "s/^/  /"
cat << EOF
  insmod part_gpt
  insmod fat
  insmod search_fs_uuid
  insmod chain
  search --fs-uuid --set=root ${ESP_SEARCH_HINTS} ${WIN_EFI_UUID}
  chainloader $WIN_EFI_PATH_LINUX
}
EOF

fi
